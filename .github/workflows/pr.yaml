name: Evaluate PR

on:
  pull_request_target:
    branches:
      - main

jobs:
  test-n-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dotnet-sonarscanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Build the project, run all tests and publish to SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_VERSION: ${{ github.sha }}
          PR_NUMBER: ${{ github.event.number }}
          PR_BASE_REF: ${{ github.base_ref }}
          PR_HEAD_REF: ${{ github.head_ref }}
        run: |
          dotnet sonarscanner begin \
            /k:"test-crispy-couscous_silver-dollop" \
            /o:"test-crispy-couscous" \
            /d:sonar.login="$SONAR_TOKEN" \
            /v:"$PROJECT_VERSION" \
            /d:sonar.scm.revision="$PROJECT_VERSION" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="**/*/coverage.opencover.xml" \
            /d:sonar.cs.vstest.reportsPaths="**/*/*.trx" \
            /d:sonar.pullrequest.base=$PR_BASE_REF \
            /d:sonar.pullrequest.branch=$PR_HEAD_REF \
            /d:sonar.pullrequest.key=$PR_NUMBER \
            /d:sonar.verbose=true

          dotnet build
          dotnet test \
            --logger trx \
            --logger "console;verbosity=detailed" \
            --settings "runsettings.xml" \
            --results-directory test-reports

          # Now we can collect the results üëç
          dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
